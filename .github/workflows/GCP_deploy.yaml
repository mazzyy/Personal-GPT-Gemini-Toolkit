name: CI/CD Pipeline to GCP Artifact Registry

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Google Cloud SDK for authentication
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }} # Your GCP service account key in GitHub secrets
          project_id: ${{ secrets.GCP_PROJECT_ID }}                   # GCP project ID in GitHub secrets
          export_default_credentials:true
      # Step 3: Authenticate Docker to use Google Artifact Registry (GAR)
      - name: Authenticate Docker with GAR
        run: gcloud auth configure-docker us-east1-docker.pkg.dev

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/toolkit:v1.0 .

      # Step 5: Push the Docker image to Google Artifact Registry (GAR)
      - name: Push Docker image to GAR
        run: |
          docker push us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/toolkit:v1.0

      # # Step 6: Deploy the Docker image to Google Cloud Run
      # - name: Deploy to Google Cloud Run
      #   run: |
      #     gcloud run deploy personal-gpt-gemini-toolkit \
      #       --image us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/personal-gpt-gemini-toolkit/toolkit:v1.0 \
      #       --platform managed \
      #       --region us-east1 \
      #       --allow-unauthenticated \
      #       --update-env-vars OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
